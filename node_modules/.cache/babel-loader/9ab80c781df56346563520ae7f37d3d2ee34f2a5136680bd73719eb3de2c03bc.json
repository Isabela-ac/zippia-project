{"ast":null,"code":"var _jsxFileName = \"/Users/isabela/Trybe/ps-zippia/project/zippia-react-project/project/src/context/Provider.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Context = /*#__PURE__*/createContext();\nfunction ContextProvider(_ref) {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [daysFilter, setDaysFilter] = useState(false);\n  const [companyFilter, setCompanyFilter] = useState('');\n  const contextValue = {\n    daysFilter,\n    setDaysFilter,\n    companyFilter,\n    setCompanyFilter\n  };\n  return /*#__PURE__*/_jsxDEV(Context.Provider, {\n    value: contextValue,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n_s(ContextProvider, \"LvkeUEtBYj1ODs9gVozulyZSnLE=\");\n_c = ContextProvider;\nContextProvider.propTypes = {\n  children: PropTypes.object.isRequired\n};\nexport default ContextProvider;\nvar _c;\n$RefreshReg$(_c, \"ContextProvider\");","map":{"version":3,"names":["React","createContext","useState","PropTypes","Context","ContextProvider","children","daysFilter","setDaysFilter","companyFilter","setCompanyFilter","contextValue","propTypes","object","isRequired"],"sources":["/Users/isabela/Trybe/ps-zippia/project/zippia-react-project/project/src/context/Provider.js"],"sourcesContent":["import React, { createContext, useState } from 'react';\nimport PropTypes from 'prop-types';\n\nexport const Context = createContext();\n\nfunction ContextProvider({ children }) {\n  const [daysFilter, setDaysFilter] = useState(false);\n  const [companyFilter, setCompanyFilter] = useState('');\n\n  const contextValue = {\n    daysFilter,\n    setDaysFilter,\n    companyFilter,\n    setCompanyFilter,\n  };\n\n  return (\n    <Context.Provider value={ contextValue }>\n      { children }\n    </Context.Provider>\n  );\n}\n\nContextProvider.propTypes = {\n  children: PropTypes.object.isRequired,\n};\n\nexport default ContextProvider;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,QAAQ,OAAO;AACtD,OAAOC,SAAS,MAAM,YAAY;AAAC;AAEnC,OAAO,MAAMC,OAAO,gBAAGH,aAAa,EAAE;AAEtC,SAASI,eAAe,OAAe;EAAA;EAAA,IAAd;IAAEC;EAAS,CAAC;EACnC,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGN,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACO,aAAa,EAAEC,gBAAgB,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEtD,MAAMS,YAAY,GAAG;IACnBJ,UAAU;IACVC,aAAa;IACbC,aAAa;IACbC;EACF,CAAC;EAED,oBACE,QAAC,OAAO,CAAC,QAAQ;IAAC,KAAK,EAAGC,YAAc;IAAA,UACpCL;EAAQ;IAAA;IAAA;IAAA;EAAA,QACO;AAEvB;AAAC,GAhBQD,eAAe;AAAA,KAAfA,eAAe;AAkBxBA,eAAe,CAACO,SAAS,GAAG;EAC1BN,QAAQ,EAAEH,SAAS,CAACU,MAAM,CAACC;AAC7B,CAAC;AAED,eAAeT,eAAe;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}